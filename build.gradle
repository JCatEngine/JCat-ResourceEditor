apply plugin: 'application'
apply plugin: 'eclipse'
apply plugin: 'java-library'
apply plugin: 'kotlin'

def mclass= "Main.Entry"
version '1.0'
sourceCompatibility = 1.8

mainClassName = mclass


buildscript {
    ext.kotlin_version = '1.1.51'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }

}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {

	compile group: 'io.reactivex', name: 'rxjava', version: '1.3.0'

    // https://mvnrepository.com/artifact/com.google.guava/guava
    compile group: 'com.google.guava', name: 'guava', version: '23.2-jre'

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"

    compile 'com.jfoenix:jfoenix:1.9.1'
    
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'

	//compile files('libs/JCat-Render-1.0.jar')
	// https://mvnrepository.com/artifact/org.json/json
    compile group: 'org.json', name: 'json', version: '20160810'
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'


}

jar {
    doFirst {
        manifest {
            attributes(
                    'Class-Path': configurations.runtimeClasspath.files.collect { "lib/"+it.getName() }.join(' '),
                    'Main-Class': mclass)

        }
    }
}

jar {
    baseName 'JCat-Editor'
}


tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task copyJar(type: Copy) {
    from configurations.runtime
    into('build/libs/lib')

}
task copyData(type: Copy) {
    from ('_res')
    into('build/libs/_res')
}

jar{
    dependsOn copyJar
    dependsOn copyData
}

